

/* create */ CREATE procedure migrar_datos
as
begin
	
	/*
	 * HACER TRUNCATE DE TODAS LAS TABLAS, ASI SI TIRO EL PROCEDURE OTRA VEZ SE BORRA TODO
	 * 
	 	RECORDATORIO: AGREGAR COMPRA_ID A COMPRA ACCESORIO (DER)
		
		RECORDATORIO: PASAR TABLA TEMPORAL A VISTA

		RECORDATORIO: AGREGAR TRIGGER PARA VERIFICAR UNICIDAD Y QUE NO HAYA REPETIDOS Y QUE ME PRINTEE ESO
	 */
	
	
	-- MIGRAR ACCESORIOS
	INSERT INTO dbo.ACCESORIO (ACCESORIO_CODIGO, ACCESORIO_DESCRIPCION)
	SELECT DISTINCT ACCESORIO_CODIGO , AC_DESCRIPCION FROM gd_esquema.Maestra
	WHERE ACCESORIO_CODIGO IS NOT NULL AND AC_DESCRIPCION IS NOT NULL
	
	IF @@ERROR != 0
	PRINT('ACCESORIOS FAIL!')
	ELSE
	PRINT('ACCESORIOS OK!')

	-- MIGRAR MICROPROCESADORES
	INSERT INTO GD1C2021.dbo.MICROPROCESADOR(MICROPROCESADOR_CODIGO,
											MICROPROCESADOR_CACHE,
											MICROPROCESADOR_CANT_HILOS,
											MICROPROCESADOR_FABRICANTE,
											MICROPROCESADOR_VELOCIDAD)
	SELECT DISTINCT
		MICROPROCESADOR_CODIGO,
		MICROPROCESADOR_CACHE ,
		MICROPROCESADOR_CANT_HILOS ,
		MICROPROCESADOR_FABRICANTE ,
		MICROPROCESADOR_VELOCIDAD 
	FROM gd_esquema.Maestra m
	WHERE MICROPROCESADOR_CODIGO IS NOT NULL AND 
		MICROPROCESADOR_CACHE IS NOT NULL AND
		MICROPROCESADOR_CANT_HILOS IS NOT NULL AND
		MICROPROCESADOR_FABRICANTE IS NOT NULL AND
		MICROPROCESADOR_VELOCIDAD IS NOT NULL
	
	IF @@ERROR != 0
	PRINT('MICROPROCESADOR FAIL!')
	ELSE
	PRINT('MICROPROCESADOR OK')

		-- MIGRAR MEMORIA RAM
		
	INSERT INTO DBO.MEMORIA_RAM (MEMORIA_RAM_CAPACIDAD,
								 MEMORIA_RAM_CODIGO,
								 MEMORIA_RAM_FABRICANTE,
								 MEMORIA_RAM_TIPO,
								 MEMORIA_RAM_VELOCIDAD)	
	SELECT DISTINCT
		MEMORIA_RAM_CAPACIDAD,
		MEMORIA_RAM_CODIGO,
		MEMORIA_RAM_FABRICANTE,
		MEMORIA_RAM_TIPO,
		MEMORIA_RAM_VELOCIDAD 
	FROM gd_esquema.Maestra m 
	WHERE MEMORIA_RAM_CAPACIDAD IS NOT NULL AND 
		MEMORIA_RAM_CODIGO IS NOT NULL AND
		MEMORIA_RAM_FABRICANTE IS NOT NULL AND
		MEMORIA_RAM_TIPO IS NOT NULL AND
		MEMORIA_RAM_VELOCIDAD IS NOT NULL
		
	IF @@ERROR != 0
	PRINT('MEMORIA RAM FAIL!')
	ELSE
	PRINT('MEMORIA RAM OK!')
	-- MIGRAR PLACA VIDEO
	
	INSERT INTO dbo.PLACA_VIDEO(PLACA_VIDEO_CAPACIDAD, 
								PLACA_VIDEO_CHIPSET,
								PLACA_VIDEO_FABRICANTE,
								PLACA_VIDEO_MODELO,
								PLACA_VIDEO_VELOCIDAD )
	SELECT DISTINCT 
		PLACA_VIDEO_CAPACIDAD ,
		PLACA_VIDEO_CHIPSET ,
		PLACA_VIDEO_FABRICANTE,
		PLACA_VIDEO_MODELO,
		PLACA_VIDEO_VELOCIDAD 
	FROM gd_esquema.Maestra m
	WHERE PLACA_VIDEO_CAPACIDAD IS NOT NULL AND 
		PLACA_VIDEO_CHIPSET IS NOT NULL AND
		PLACA_VIDEO_FABRICANTE IS NOT NULL AND
		PLACA_VIDEO_MODELO IS NOT NULL AND
		PLACA_VIDEO_VELOCIDAD IS NOT NULL
	
	IF @@ERROR != 0
	PRINT('PLACA VIDEO FAIL!')
	ELSE
	PRINT('PLACA VIDEO OK!')

	-- MIGRAR DISCO DURO
	
	INSERT INTO dbo.DISCO_RIGIDO(DISCO_RIGIDO_CAPACIDAD,
								 DISCO_RIGIDO_CODIGO,
								 DISCO_RIGIDO_FABRICANTE,
								 DISCO_RIGIDO_TIPO,
								 DISCO_RIGIDO_VELOCIDAD)
	SELECT DISTINCT
		DISCO_RIGIDO_CAPACIDAD ,
		DISCO_RIGIDO_CODIGO ,
		DISCO_RIGIDO_FABRICANTE ,
		DISCO_RIGIDO_TIPO ,
		DISCO_RIGIDO_VELOCIDAD 
	FROM gd_esquema.Maestra m 
		WHERE DISCO_RIGIDO_CAPACIDAD IS NOT NULL AND 
			  DISCO_RIGIDO_CODIGO  IS NOT NULL AND 
			  DISCO_RIGIDO_FABRICANTE IS NOT NULL AND 
			  DISCO_RIGIDO_TIPO IS NOT NULL AND 
			  DISCO_RIGIDO_VELOCIDAD IS NOT NULL 
	
	IF @@ERROR != 0
	PRINT('DISCO RIGIDO FAIL!')
	ELSE
	PRINT('DISCO RIGIDO OK!')

	-- MIGRAR PC
	

	INSERT INTO dbo.PC(DISCO_RIGIDO_CODIGO,
	   MEMORIA_RAM_CODIGO,
	   MICROPROCESADOR_CODIGO,
	   PLACA_VIDEO_CHIPSET,
	   PC_ALTO,
	   PC_ANCHO,
	   PC_CODIGO,
	   PC_PROFUNDIDAD)
	SELECT DISTINCT 
		DISCO_RIGIDO_CODIGO,
		MEMORIA_RAM_CODIGO, 
		MICROPROCESADOR_CODIGO, --NVARCHAR(50)
		PLACA_VIDEO_CHIPSET, -- Podria ser el modelo NVARCHAR(50)
		PC_ALTO,
		PC_ANCHO,
		PC_CODIGO,
		PC_PROFUNDIDAD 
	FROM gd_esquema.Maestra m 
	WHERE DISCO_RIGIDO_CODIGO IS NOT NULL AND
		 MEMORIA_RAM_CODIGO IS NOT NULL AND 
		 MICROPROCESADOR_CODIGO IS NOT NULL AND 
		 PLACA_VIDEO_CHIPSET IS NOT NULL AND 
		 PC_ALTO IS NOT NULL AND
		 PC_ANCHO IS NOT NULL AND 
		 PC_CODIGO IS NOT NULL 
	
	IF @@ERROR != 0
	PRINT('PC FAIL!')
	ELSE
	PRINT('PC OK!')

	-- MIGRAR SUCURSAL (NO INCLUYO CIUDAD YA QUE NO SE DA INFO RESPECTO A ESO)
	
	INSERT INTO dbo.SUCURSAL (SUCURSAL_ID,
							  SUCURSAL_DIR,
							  SUCURSAL_MAIL,
							  SUCURSAL_TEL,
							  CIUDAD)
	 SELECT DISTINCT
		ROW_NUMBER() OVER ( ORDER BY SUCURSAL_DIR), -- Estoy creando una PK ya que la tabla maestra no trae.
		SUCURSAL_DIR,
		SUCURSAL_MAIL,
		SUCURSAL_TEL,
		CIUDAD
	FROM GD1C2021.gd_esquema.Maestra m 
	GROUP BY SUCURSAL_DIR, SUCURSAL_MAIL, SUCURSAL_TEL, CIUDAD
	
	IF @@ERROR != 0
	PRINT('SUCURSAL FAIL!')
	ELSE
	PRINT('SUCURSAL OK!')

	-- MIGRA COMPRA_PC
	
	INSERT INTO DBO.COMPRA_PC(COMPRA_NUMERO,
							  PC_CODIGO,
							  COMPRA_FECHA,
							  COMPRA_PRECIO,
							  ID_SUCURSAL)
	SELECT DISTINCT 
		COMPRA_NUMERO,
		PC_CODIGO,
		COMPRA_FECHA,
		COMPRA_PRECIO,
		( SELECT s.SUCURSAL_ID FROM GD1C2021.dbo.SUCURSAL s
		  WHERE s.SUCURSAL_DIR = m.SUCURSAL_DIR AND
		  	   s.SUCURSAL_MAIL = m.SUCURSAL_MAIL AND
		  	   s.SUCURSAL_TEL = m.SUCURSAL_TEL) AS SUCURSAL_ID
	FROM GD1C2021.gd_esquema.Maestra m
	WHERE COMPRA_NUMERO IS NOT NULL AND 
		  PC_CODIGO IS NOT NULL AND 
		  COMPRA_FECHA IS NOT NULL AND 
		  COMPRA_PRECIO IS NOT NULL  -- SE PODRIA TAMB FILTRAR LOS NULL EN SUCURSAL PERO BUE
	ORDER BY COMPRA_FECHA 

	IF @@ERROR != 0
	PRINT('COMPRA PC FAIL!')
	ELSE
	PRINT('COMPRA PC OK!')

	-- MIGRA CLIENTE
	
	INSERT INTO GD1C2021.dbo.CLIENTE(ID_CLIENTE,
									 CLIENTE_DNI,
									 CLIENTE_APELLIDO,
									 CLIENTE_NOMBRE,
									 CLIENTE_DIRECCION,
									 CLIENTE_FECHA_NACIMIENTO,
									 CLIENTE_MAIL,
									 CLIENTE_TELEFONO)
		SELECT DISTINCT
		ROW_NUMBER() OVER ( ORDER BY CLIENTE_DNI,
							CLIENTE_APELLIDO,
							CLIENTE_NOMBRE), -- Estoy creando una PK ya que la tabla maestra no trae.
		CLIENTE_DNI ,
		CLIENTE_APELLIDO,
		CLIENTE_NOMBRE ,
		CLIENTE_DIRECCION,
		CLIENTE_FECHA_NACIMIENTO ,
		CLIENTE_MAIL ,
		CLIENTE_TELEFONO 
	FROM GD1C2021.gd_esquema.Maestra m
	WHERE CLIENTE_DNI IS NOT NULL AND 
		  CLIENTE_APELLIDO IS NOT NULL AND 
		  CLIENTE_NOMBRE IS NOT NULL AND
		  CLIENTE_DIRECCION IS NOT NULL AND 
		  CLIENTE_FECHA_NACIMIENTO IS NOT NULL AND 
		  CLIENTE_MAIL IS NOT NULL AND 
		  CLIENTE_TELEFONO IS NOT NULL
	ORDER BY CLIENTE_APELLIDO 
		  
	IF @@ERROR != 0
	PRINT('CLIENTE FAIL!')	  
	ELSE
	PRINT('CLIENTE OK!')
		  
	
	-- CREAR TABLA TEMPORAL PRECIO_PRODUCTO_PC
	
	CREATE TABLE GD1C2021.dbo.#PRECIO_PRODUCTO_PC(
	PC_CODIGO NVARCHAR(255),
	COMPRA_PRECIO DECIMAL
	)	  
		  
	INSERT INTO GD1C2021.dbo.#PRECIO_PRODUCTO_PC
	Select DISTINCT
		m.PC_CODIGO,
		m.COMPRA_PRECIO
	from gd_esquema.Maestra m 
	WHERE m.pc_codigo is not null and ISNULL(m.CLIENTE_DNI,0) = 0 
	
	IF @@ERROR != 0
	PRINT('TABLA TEMP PRECIO_PRODUCTO_PC FAIL!')
	ELSE
	PRINT('TABLA TEMP PRECIO_PRODUCTO_PC OK!')

	-- MIGRA VENTA_PC

	INSERT INTO dbo.VENTA_PC(FACTURA_NUMERO,
							 FACTURA_FECHA,
							 PC_CODIGO,
							 ID_SUCURSAL,
							 ID_CLIENTE, 
							 PRECIO_VENTA)
	SELECT
	m.FACTURA_NUMERO,
	m.FACTURA_FECHA,
	m.PC_CODIGO,
	s.SUCURSAL_ID,
	c.ID_CLIENTE,
	pp.COMPRA_PRECIO * 0.2 AS PRECIO_VENTA
	from gd_esquema.Maestra m 
	JOIN dbo.SUCURSAL s
	ON s.SUCURSAL_DIR = m.SUCURSAL_DIR AND
    s.SUCURSAL_MAIL = m.SUCURSAL_MAIL AND
   	s.SUCURSAL_TEL = m.SUCURSAL_TEL
	JOIN dbo.CLIENTE c 
	ON c.CLIENTE_APELLIDO = m.CLIENTE_APELLIDO AND 
   	c.CLIENTE_DIRECCION = m.CLIENTE_DIRECCION AND 
   	c.CLIENTE_DNI = m.CLIENTE_DNI AND 
  	c.CLIENTE_FECHA_NACIMIENTO = m.CLIENTE_FECHA_NACIMIENTO AND 
   	c.CLIENTE_MAIL = m.CLIENTE_MAIL AND 
   	c.CLIENTE_NOMBRE = m.CLIENTE_NOMBRE AND 
   	c.CLIENTE_TELEFONO = m.CLIENTE_TELEFONO
	JOIN #PRECIO_PRODUCTO_PC pp
	ON pp.PC_CODIGO = m.PC_CODIGO
	WHERE m.FACTURA_NUMERO IS NOT NULL AND 
	      m.FACTURA_FECHA IS NOT NULL AND
	  	  m.PC_CODIGO IS NOT NULL AND 
	  	  s.SUCURSAL_ID IS NOT NULL AND 
	  	  c.ID_CLIENTE IS NOT NULL AND
	  	  ISNULL(m.CLIENTE_DNI,0) > 0
	ORDER BY PC_CODIGO
	
	IF @@ERROR != 0
	PRINT('VENTA PC FAIL!')
	ELSE
	PRINT('VENTA PC OK!')


	-- MIGRAR COMPRA_ACCESORIO
	/*
	ALTER TABLE dbo.COMPRA_ACCESORIO ADD ID_COMPRA DECIMAL PRIMARY KEY;
	ALTER TABLE dbo.COMPRA_ACCESORIO  DROP CONSTRAINT PK__COMPRA_A__B273F0B3A6D57AEC
	ALTER TABLE dbo.COMPRA_ACCESORIO ALTER COLUMN COMPRA_NUMERO
	*/
	
	INSERT INTO dbo.COMPRA_ACCESORIO (ID_COMPRA,
									  COMPRA_NUMERO,
									  ID_SUCURSAL,
									  ACCESORIO_CODIGO,
									  COMPRA_FECHA,
									  COMPRA_CANTIDAD,
									  COMPRA_PRECIO
									  )
	SELECT 
		ROW_NUMBER() OVER (ORDER BY m.COMPRA_FECHA ASC) AS ID_COMPRA,
		m.COMPRA_NUMERO,
		s.SUCURSAL_ID,
		m.ACCESORIO_CODIGO,
		m.COMPRA_FECHA,
		m.COMPRA_CANTIDAD,
		m.COMPRA_PRECIO 
	FROM GD1C2021.gd_esquema.Maestra m 
	LEFT JOIN GD1C2021.dbo.SUCURSAL s
	ON s.SUCURSAL_DIR = m.SUCURSAL_DIR AND 
	   s.SUCURSAL_MAIL = m.SUCURSAL_MAIL AND 
	   s.SUCURSAL_TEL = m.SUCURSAL_TEL 
	WHERE m.ACCESORIO_CODIGO IS NOT NULL AND
		  s.SUCURSAL_ID IS NOT NULL AND 
		  m.COMPRA_FECHA IS NOT NULL AND 
		  m.COMPRA_CANTIDAD IS NOT NULL 
	ORDER BY ID_COMPRA  
	-- SE REPITEN LOS COMPRA NUMERO,
	-- NO PUEDE SER CLAVE PRIMARIA SI HAY REPETIDOS,
	-- CREO UN ID UNICO COMO PK
		  
	
	IF @@ERROR != 0
	PRINT('COMPRA ACCESORIO FAIL!')
	ELSE
	PRINT('COMPRA ACCESORIO OK!')

	-- MIGRO VENTA ACCESORIO
	
	--ALTER TABLE dbo.VENTA_ACCESORIO ADD VENTA_NUMERO DECIMAL PRIMARY KEY;

	--ALTER TABLE VENTA_ACCESORIO DROP CONSTRAINT PK__VENTA_AC__0B0B27CE29B31CF8;	

	INSERT INTO dbo.VENTA_ACCESORIO( 
							   VENTA_NUMERO,
							   FACTURA_NUMERO,
							   ID_SUCURSAL,
							   ID_CLIENTE,
							   FACTURA_FECHA
							  )
		SELECT
			ROW_NUMBER() OVER (ORDER BY SUB_VENTA.FACTURA_FECHA) AS VENTA_NUMERO, -- Es necesario ya que los FACTURA NUMERO no son unicos,
			*
			FROM (
				SELECT
					VENTA.FACTURA_NUMERO,
					VENTA.SUCURSAL_ID,
					VENTA.ID_CLIENTE,
					VENTA.FACTURA_FECHA
				FROM (
						SELECT
							m.FACTURA_NUMERO,
							s.SUCURSAL_ID,
							c.ID_CLIENTE,
							m.FACTURA_FECHA
						FROM GD1C2021.gd_esquema.Maestra m
						JOIN dbo.SUCURSAL s
						ON  s.SUCURSAL_DIR = m.SUCURSAL_DIR AND
							s.SUCURSAL_MAIL = m.SUCURSAL_MAIL AND
				   			s.SUCURSAL_TEL = m.SUCURSAL_TEL  -- CIUDAD?
						JOIN dbo.CLIENTE c 
						ON  c.CLIENTE_APELLIDO = m.CLIENTE_APELLIDO AND 
				   			c.CLIENTE_DIRECCION = m.CLIENTE_DIRECCION AND 
				   			c.CLIENTE_DNI = m.CLIENTE_DNI AND 
				  			c.CLIENTE_FECHA_NACIMIENTO = m.CLIENTE_FECHA_NACIMIENTO AND 
				   			c.CLIENTE_MAIL = m.CLIENTE_MAIL AND 
				   			c.CLIENTE_NOMBRE = m.CLIENTE_NOMBRE AND 
				   			c.CLIENTE_TELEFONO = m.CLIENTE_TELEFONO
						WHERE m.FACTURA_NUMERO IS NOT NULL AND
							  s.SUCURSAL_ID IS NOT NULL AND
							  ISNULL(m.CLIENTE_DNI,0) > 0 AND
							  m.FACTURA_FECHA IS NOT NULL and
							  m.ACCESORIO_CODIGO IS NOT NULL AND
							  m.COMPRA_NUMERO IS NULL
				) AS VENTA
		 ) AS SUB_VENTA


	-- MIGRAR ACCESORIO_POR_VENTA
	
	-- DEJAR SELECT COMO SUB SELECT Y METER EL ROW COLUMN AHI PARA CREAR BIEN LA PK
	
		create view v_ACCESORIO_PRECIO AS
		Select
			m.ACCESORIO_CODIGO,
			m.COMPRA_PRECIO,
			m.COMPRA_CANTIDAD,
			M.COMPRA_FECHA,
			s.SUCURSAL_ID
		from gd_esquema.Maestra m 
		JOIN dbo.SUCURSAL s
		ON s.SUCURSAL_DIR = m.SUCURSAL_DIR AND
	   s.SUCURSAL_MAIL = m.SUCURSAL_MAIL AND
	   s.SUCURSAL_TEL = m.SUCURSAL_TEL
		WHERE m.pc_codigo is  null and
		ISNULL(m.CLIENTE_DNI,0) = 0 AND
		COMPRA_FECHA is not null
		AND s.SUCURSAL_ID IS NOT NULL AND 
		m.COMPRA_CANTIDAD IS NOT NULL 
	
		
	INSERT INTO dbo.ACCESORIO_POR_VENTA(ID_ACCESORIOxVENTA,
										ACCESORIO_CODIGO,
										VENTA_NUMERO,
										PRECIO_UNITARIO,
										VENTA_CANTIDAD 
										
	)
	SELECT 
		ROW_NUMBER () OVER (ORDER BY SUBQ.COMPRA_FECHA) AS ID_ACCESORIOxFECHA,
		SUBQ.ACCESORIO_CODIGO,
		SUBQ.VENTA_NUMERO,
		SUBQ.PRECIO_UNITARIO,
		SUBQ.compra_cantidad
	FROM (
		 SELECT DISTINCT
				m.ACCESORIO_CODIGO,
				va.VENTA_NUMERO,
				--va.FACTURA_NUMERO,
				m.COMPRA_PRECIO / vista.compra_cantidad AS PRECIO_UNITARIO,
				vista.compra_cantidad,
				m.COMPRA_FECHA
				
			from gd_esquema.Maestra m
			JOIN dbo.SUCURSAL s 
			ON  s.SUCURSAL_DIR = m.SUCURSAL_DIR AND
		   		s.SUCURSAL_MAIL = m.SUCURSAL_MAIL AND
		   		s.SUCURSAL_TEL = m.SUCURSAL_TEL
			join V_ACCESORIO_PRECIO vista
			ON vista.ACCESORIO_CODIGO = m.ACCESORIO_CODIGO AND 
			   vista.SUCURSAL_ID = s.SUCURSAL_ID AND
			   vista.COMPRA_FECHA = m.COMPRA_FECHA 
			join dbo.VENTA_ACCESORIO va 
			ON va.FACTURA_FECHA = vista.compra_fecha AND 
			   va.ID_SUCURSAL = vista.SUCURSAL_ID	
	
		) AS SUBQ

	IF @@ERROR != 0
	PRINT('ACCESORIO_POR_VENTA FAIL!')
	ELSE
	PRINT('ACCESORIO_POR_VENTA OK!')
	
end

exec GD1C2021.DBO.migrar_datos

/* 
	begin transaction


	rollback transaction

*/

/*
 	DROP procedure migrar_datos
    DROP FROM #PRECIO_PRODUCTO_PC
 	DROP VIEW v_ACCESORIO_PRECIO
	DELETE FROM dbo.ACCESORIO_POR_VENTA
	DELETE FROM dbo.VENTA_PC
	DELETE FROM dbo.VENTA_ACCESORIO
	--DELETE FROM dbo.#PRECIO_PRODUCTO_PC
	DELETE FROM dbo.COMPRA_PC
	DELETE FROM dbo.COMPRA_ACCESORIO
	DELETE FROM dbo.PC
	DELETE FROM dbo.ACCESORIO
	DELETE FROM dbo.MICROPROCESADOR
	DELETE FROM dbo.MEMORIA_RAM
	DELETE FROM dbo.PLACA_VIDEO
	DELETE FROM dbo.DISCO_RIGIDO
	DELETE FROM dbo.SUCURSAL
	DELETE FROM dbo.CLIENTE
	
	CHEQUEAR SI ESTA VACIA

	SELECT
	*
	FROM 
	dbo.ACCESORIO_POR_VENTA,
	dbo.COMPRA_ACCESORIO,
	dbo.VENTA_PC,
	--dbo.#PRECIO_PRODUCTO_PC,
	dbo.COMPRA_PC,
	dbo.PC,
	dbo.ACCESORIO,
	dbo.MICROPROCESADOR,
	dbo.MEMORIA_RAM,
	dbo.PLACA_VIDEO,
	dbo.DISCO_RIGIDO,
	dbo.SUCURSAL,
	dbo.CLIENTE

	
	
	
*/
